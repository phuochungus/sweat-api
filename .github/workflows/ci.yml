name: Deploy Sweat API

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      GIT_SHA: ${{ steps.get_sha.outputs.GIT_SHA }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Get short Git SHA
        id: get_sha
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV && echo "::set-output name=GIT_SHA::$(git rev-parse --short HEAD)"

      - name: Build and tag Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sweat-api:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/sweat-api:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      GIT_SHA: ${{ needs.build-and-push.outputs.GIT_SHA }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install Session Manager Plugin
        run: |
          curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
          sudo dpkg -i session-manager-plugin.deb

      - name: Deploy to EC2 using Session Manager
        run: |
          # Create a deployment script
          cat > deploy.sh << 'EOF'
          aws ssm get-parameter --name "sweat" --with-decryption --query "Parameter.Value" --output text --region ap-southeast-1 > .env
          docker image prune -f
          docker pull ${{ secrets.DOCKER_USERNAME }}/sweat-api:latest

          # Stop and remove the container if it exists
          docker stop sweat-api || true
          docker rm sweat-api || true

          # Run the new container
          docker run -d --name sweat-api -p 80:3000 --env-file .env --restart always ${{ secrets.DOCKER_USERNAME }}/sweat-api:latest
          EOF

          chmod +x deploy.sh

          # Execute the script on the target instance using Session Manager
          aws ssm send-command \
            --instance-ids "i-07ab8c99647799af5" \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=$(cat deploy.sh)" \
            --output text

      - name: Send Telegram notification on success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ Deployment Successful!
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ needs.build-and-push.outputs.GIT_SHA }}
            Deployed by: ${{ github.actor }}
            See details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Send Telegram notification on failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ❌ Deployment Failed!
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ needs.build-and-push.outputs.GIT_SHA }}
            Initiated by: ${{ github.actor }}
            See details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
