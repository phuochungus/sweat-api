name: Deploy Sweat API

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      GIT_SHA: ${{ steps.get_sha.outputs.GIT_SHA }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Get short Git SHA
        id: get_sha
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV && echo "::set-output name=GIT_SHA::$(git rev-parse --short HEAD)"

      - name: Build and tag Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sweat-api:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/sweat-api:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to EC2 using Session Manager
        run: |
          # Create and encode the deployment script
          DEPLOY_SCRIPT='#!/bin/bash
          aws ssm get-parameter --name "sweat" --with-decryption --query "Parameter.Value" --output text --region ap-southeast-1 > .env
          docker image prune -f
          docker pull ${{ secrets.DOCKER_USERNAME }}/sweat-api:latest
          docker stop sweat-api || true
          docker rm sweat-api || true

          # Check if log group exists, create if not
          if ! aws logs describe-log-groups --log-group-name-prefix /sweat-api/docker-logs --region ap-southeast-1 | grep -q "/sweat-api/docker-logs"; then
            aws logs create-log-group --log-group-name /sweat-api/docker-logs --region ap-southeast-1
          fi

          # Run container with CloudWatch logs driver
          docker run -d --name sweat-api \
            -p 3000:3000 \
            --env-file .env \
            --restart always \
            --log-driver=awslogs \
            --log-opt awslogs-region=ap-southeast-1 \
            --log-opt awslogs-group=/sweat-api/docker-logs \
            ${{ secrets.DOCKER_USERNAME }}/sweat-api:latest'

          ENCODED_SCRIPT=$(echo "$DEPLOY_SCRIPT" | base64 -w 0)

          # Execute with SSM Run Command
          aws ssm send-command \
            --instance-ids "i-07ab8c99647799af5" \
            --document-name "AWS-RunShellScript" \
            --parameters "{\"commands\":[\"echo $ENCODED_SCRIPT | base64 -d > /tmp/deploy.sh\",\"chmod +x /tmp/deploy.sh\",\"/tmp/deploy.sh\"]}"

      - name: Send Telegram notification on success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ Deployment Successful!
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ needs.build-and-push.outputs.GIT_SHA }}
            Deployed by: ${{ github.actor }}
            See details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Send Telegram notification on failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ❌ Deployment Failed!
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ needs.build-and-push.outputs.GIT_SHA }}
            Initiated by: ${{ github.actor }}
            See details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
